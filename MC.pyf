!    -*- f90 -*-
! Note: the context of this file is case sensitive.

python module MC ! in 
    interface  ! in :MC
        module core ! in :MC:MC.f90
            use ieee_arithmetic
            integer :: dof
            integer :: nsite
            integer :: na
            integer :: nb
            integer :: nc
            integer :: nlst
            integer, allocatable, dimension(:,:) :: chi
            integer, allocatable, dimension(:) :: irng
            integer, allocatable, dimension(:) :: jlst
            real, allocatable, dimension(:) :: klst
            real :: action
            real :: beta
            integer, allocatable, dimension(:) :: config
            integer, allocatable, dimension(:) :: hist
            subroutine init ! in :MC:MC.f90:core
            end subroutine init
            subroutine seed(s) ! in :MC:MC.f90:core
            	integer, intent(in) :: s
            end subroutine seed
            subroutine run(steps) ! in :MC:MC.f90:core
                integer, intent(in) :: steps
            end subroutine run
            subroutine set_beta(new_beta) ! in :MC:MC.f90:core
            	real, intent(in) :: new_beta
            end subroutine set_beta
            subroutine get_action ! in :MC:MC.f90:core
            end subroutine get_action
            subroutine get_hist ! in :MC:MC.f90:core
            end subroutine get_hist
            subroutine dump ! in :MC:MC.f90:core
            end subroutine dump
            subroutine load ! in :MC:MC.f90:core
            end subroutine load
        end module core
        module data ! in :MC:MC.f90
            use core
            integer :: nspin
            integer, allocatable,dimension(:) :: monitor
            real :: energy1
            real :: energy2
            real, allocatable, dimension(:) :: magnet1
            real, allocatable, dimension(:,:) :: magnet2
            real, allocatable, dimension(:,:) :: spins
            integer :: nser
            real, allocatable, dimension(:) :: eser
            real, allocatable, dimension(:,:) :: mser
            subroutine measure(steps) ! in :MC:MC.f90:data
                integer intent(in) :: steps
            end subroutine measure
            subroutine collect(steps) ! in :MC:MC.f90:data
                integer intent(in) :: steps
            end subroutine collect
        end module data
    end interface 
end python module MC

! This file was auto-generated with f2py (version:2).
! See http://cens.ioc.ee/projects/f2py2e/
